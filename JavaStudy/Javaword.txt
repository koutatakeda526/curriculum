■ 開発
ウォーターフォール開発
		開発手順を1つずつ確認しながら工程を進めていく手法のこと
		開発を各工程に分けて進めますが、次のフェーズに進んでしまうと後戻りができない手法
		特徴は、ひとつひとつの工程に抜け漏れがないかどうか厳重に管理しながら進めていくこと
アジャイル開発
		クライアントの要望に応えるシステムをできる限り素早くリリースしようという考えに基づいている開発手法
		開発メンバーがシステムにおける優先度に順位をつけ、短い期間での納品を目指して動きます。
マイグレーション
		ソフトウェアやシステム、データなどを別の環境に移転したり、新しい環境に切り替えたりすることを意味する
デグレーション
		プログラムの不具合を修正したときに、ほかに新たな不具合が出てくること
		品質や機能が修正前より悪い状態になること
デプロイ
		作ったプログラムをしかるべき場所に置いたり、あれやこれやの設定をしたりして、使える状態にすること
		システムを利用可能な状態にすること
コンフリクト
		コンピュータシステムの中で共存する複数のソフトウェアやハードウェアが、同じ資源（メモリ領域やI/Oポートなど)
		を同時に利用しようとして奪い合いになったり、動作が不安定になったりすること
環境
		ある装置やソフトウェアにとって、それが導入されるコンピュータのハードウェアの構成や設定、OSなど
		ソフトウェアの構成や設定、および、それら全体の組み合わせのこと
開発環境（ローカル）
		個人のコンピューター内に構築された環境のこと
検証環境（ステージング）
		本番環境に条件を限りなく近づけた「最終テスト用に用いる、本番環境と類似のテスト環境
		リバース プロキシ、SSL 設定、またはロードバランサなどを含めて本番環境と同じ構成にし、
		本番環境をほぼ複製したもの
		
本番環境
		ステージング環境でOKになったものをアップするところ
		私たちがサイト閲覧をしてる環境
設計書／仕様書
		決め事を記載した書類が仕様書
		仕様を実現する為に、どうやったら実現できるかその実現方法を記載した書類が設計書	
要件定義
		システム開発などのプロジェクトを始める前の段階で、必要な機能や要求をわかりやすくまとめていく作業のこと
		本格的な開発工程の前段階で、開発者の視点から要求をまとめ、具体的な進め方を決めること
基本設計書
		顧客の要件を実現するための機能を具体化する工程
		ソフトウェアの動きを外から見た際にどういう動きをするのか？(What)を決めたもの	
詳細設計書
		基本設計で決められた動きをどうやって実現するか？(How)を決めたもの
テスト
		
単体テスト（UT）
		関数単位、処理単位など、プログラムの小さな固まりが仕様どおり動作するかを確認します
結合テスト（CT／IT）
		単体試験では問題なかったプログラムも他と組み合わせることにより、
		仕様と違った動きをする場合があるので、そのような不具合を発見します
総合テスト（ST）
		システム全体を通してすべてのプログラムが要件定義の通りに動くのかを確認
エビデンス／証跡
		システム開発のテスト工程などで、システムが正しく動作している、
		あるいは不具合が生じたことを示す証拠となる書類やデータなど
データパッチ
		ソフトウェアを構成するプログラムやデータを更新・修正するために、
		新しい版との相違点（差分）を抜き出したデータのこと
Access
		リレーショナルデータベース（RDB）を作成・管理するためのソフトウェア
マクロ
		関連する複数の操作や手順、命令などを一つにまとめ、必要に応じて呼び出すことができるようにする機能のこと
VBA
		Microsoft Officeに含まれるアプリケーションソフトの拡張機能で、利用者が簡易なプログラムを記述して実行する
		ことで複雑な処理の自動化などを行なうことができるもの。また、そのために用意されたプログラミング言語。
GAS（Google Apps Script）
		Googleが開発・提供しているプログラミング言語
		Google Apps Script を利用すれば、GmailやGoogleカレンダー、Googleドライブなど、
		Googleが提供しているさまざまなサービスを連携して活用することができます。
API
		Application Programming Interface
		ソフトウェアやアプリケーションなどの一部を外部に向けて公開することにより、
		第三者が開発したソフトウェアと機能を共有できるようにしてくれるもの
		ソフトウェアにAPIという外部とやりとりする窓口を作り、外部アプリとコミュニケーションや連携ができる状態にする
WEB API
		API提供者とAPI利用者とのやりとりをHTTP／HTTPSベースで実現するAPI
		HTTP／HTTPSベースのAPIであるため、異なるプログラミング言語で開発された
		アプリケーション間を連携させることが可能
REST API
		Representational State Transfer
		HTTPのメソッド（命令）でデータ操作種別（CRUD）を表す、ステートレスにする、
		URIで操作対象のリソースを判別可能にする、レスポンスとしてXMLもしくはJSONで操作結果を戻す
		上記のRESTの考え方に従って実装されたAPI
SOAP
		XMLを利用したWebサービス連携プロトコル
		XMLで記述された「SOAPメッセージ」と呼ばれるデータをやりとりすることで、メッセージを交換する
		WSDL（Web Services Description Language）というWebサービスインタフェース記述言語で
		SOAPメッセージの構造を定義でき、このWSDLによる定義ファイルをAPI利用者、API提供者双方で保持することで、
		独自に定義した構造のSOAPメッセージをやりとりすることが可能となる
		異なるコンピュータ上で動作するプログラム同士がネットワークを通じてメッセージを伝え合い、
		連携して動作するための通信プロトコル（規約）の一つ。 メッセージの記述にXMLを、データ伝送に主にHTTPを用い、
		Webサービスの提供や利用に適しているとされる
★Ajax（エイジャックス）
		Asynchronous JavaScript + XML
		あるWebページを表示した状態のまま、別のページや再読込などを伴わずにWebサーバ側と通信を行い、
		動的に表示内容を変更する手法。 
		ページ上でプログラムを実行できるプログラミング言語JavaScriptの拡張機能を用いる
XML
		Extensible Markup Language
		特定の企業が提供している技術ではなく、インターネット上で使用される各種技術の標準化推進団体である、
		W3C（World Wide Web Consortium）によるオープンな規格
		XML以外にもマークアップ言語には、HTML、RTF、SGMLなどがあります
		HTMLとは「Hyper Text Markup Language」の略です。Webページを記述するための表示用言語
		XMLは、データ記述用の言語
JSON
		JavaScript Object Notation
		JavaScriptにおけるオブジェクトの表記法を応用したテキスト（文字）ベースのデータ形式
ステータスコード
		システムが処理結果や現在の状態を外部に知らせるために発する数字や短い符号
クロスオリジン（Cross-Origin）／CORS（Cross-Origin Resource Sharing）
		追加の HTTP ヘッダーを使用して、あるオリジンで動作しているウェブアプリケーションに、
		異なるオリジンにある選択されたリソースへのアクセス権を与えるようブラウザーに指示するための仕組み
バリデーション
		入力内容や記述内容が要件を満たしているか、妥当性を確認すること
データ連携
		異なるアプリケーションやシステムをまたいでデータを共有、活用するために、
		それぞれの言葉や解釈の垣根を取り払うプロセス
Daemon（デーモン）
		UNIX系OSでメインメモリ上に常駐して特定の機能を提供するプログラム
		利用者の操作とは無関係に処理を行うバックグラウンドプロセスの一種
		別のプログラムや機器、通信相手など外部からの要求を受け付けて処理を実行したり、
		あらかじめ設定されたタイミングで自律的に特定の処理を実行したりする
CRON
		多くのUNIX系OSで標準的に利用される常駐プログラム（デーモン）の一種
		利用者の設定したスケジュールに従って指定されたプログラムを定期的に起動してくれるもの
バッチ（Batch）
		バッチ処理はあらかじめ登録した一連の処理を自動的に実行する処理方式を指す
		 複数のプログラムやファイル転送コマンドなどの実行順序を定義し、大量のデータを一括処理する。 
		処理の単位を「バッチ」と呼ぶ。
ログ
		コンピュータの利用状況やデータ通信など履歴や情報の記録を取る事
		 操作やデータの送受信が行われた日時と、行われた操作の内容や送受信されたデータの中身などが記録される
CSV
		Comma-Separated Values、カンマ区切り / コンマ区切り
		テキスト（文字）データの形式の一つで、項目をカンマ「,」で区切って列挙したもの
		標準のファイル拡張子は「.csv」
TSV
		Tab-Separated Values、タブ区切り / .tsvファイル
		複数の項目で構成されるデータを複数件列挙して表現することができる汎用的なデータ形式の一つで、
		項目間の区切り文字にタブ文字を用いるもの
プルリクエスト（マージリクエスト）（pull request）（merge request）
		分散バージョン管理システム（VCS）の機能の一つで、コードなどを追加・修正した際、
		本体への反映を他の開発者に依頼する機能
		開発者のローカルリポジトリでの変更を他の開発者に通知する機能
■ チケット管理ツール
asana
		イベントやキャンペーンに携わるチームメンバーの日々の仕事をサポートするためのワークマネジメントツール
Backlog
		プロジェクト管理ツール、Subversion・Git バージョン管理システム	
Jooto
		あらゆるチームや組織で利用できるタスク・プロジェクト管理ツール
Redmine
		オープンソースのプロジェクト管理ソフトの一つ
		複数人の共同作業における進捗管理や情報共有などができるシステムで、
		基本的な操作や管理はWebブラウザを通じて行なうことができる	
Trello
		カードを動かしながらタスクを視覚的に管理できるカンバン方式のツール
		 壁面に付箋紙を貼るような感覚で、ドラック＆ドロップで直感的に操作が可能
■ バージョン管理
集中型
		Subversion(SVN)，Concurrent Version System(CVS)
		リポジトリを用意できるのは1つのサーバだけ
分散型
		主となるサーバは持っていません、
		だれもが独立したリポジトリを用意して，他のリポジトリと同期することができます
		分散型は複数のリポジトリを持つことができます
Github
		「Git」は、「ソースコードのバージョンを管理するツール」
		「Github」は、「Gitを利用した、開発者を支援するWebサービス」
		クラウド上でGitを用いたバージョン管理をすることができ、さらにGitには無い、開発者に便利な機能を追加している
Backlog
		今後やる予定の作業や開発する予定のシステムのこと
		実施すべきとされながら、未処理、未着手のまま放置されている作業や業務、案件などのこと
		プロジェクト管理ツール、Subversion・Git バージョン管理システム	
SourceTree
		Atlassianが無料で提供しているGitを用いたバージョン管理ツール
		SourceTreeで用いるBitBucketはGitHubと同じような機能を持っている
		SourceTreeはGUIで表現されているため、視覚的にわかりやすい点が特徴	
Tortoise SVN
		バージョン管理システム
		Subversion のクライアントで、Windowsのシェルエクステンションとして機能します
		専用のGUIを備えており、CUI の Subversion より、直感的で簡単に扱うことが出来ます
Git Flow
		チームで Git を使う際に役立つ、運用ルールをまとめたツール（プラグイン）
master
		?
release
		同種のものが複数ある場合に、優先されるもの、元になるもの、
		制御する側のものなどを区別するために利用されることが多い
マスターデータ
		データ管理の文脈では、複製や加工などが行われる前の、元になる正規のデータのことを
		マスターデータ、マスターファイルなどと呼び、これを略してマスターという
develop
		?
feature
		ソフトウェアのアジャイル開発プロセスで、利用者の視点から見たソフトウェアやシステムの持つ機能・特徴のこと?

■ FW／ライブラリ
FW
		ファームウェア 【firmware】
		コンピュータや電子機器などに内蔵されるソフトウェアの一種
		本体内部の回路や装置などの基本的な制御を司る機能を持ったもの
Spring Framework
		Java言語によるソフトウェア開発を支援するフレームワークの一つ
Struts(ストラッツ)
		Apache Strutsとは、Javaを用いてWebアプリケーションを開発するためのフレームワークの一つ
		Apacheソフトウェア財団（ASF）が開発を主催し、オープンソースソフトウェアとして公開している
JSF（Java Server Faces）
		Java言語を用いてWebアプリケーションを開発するためのフレームワークの一つ
		Javaの開発元であるOracle社が開発・提供しているもの
		その仕様はJava EE（Java Platform, Enterprise Edition）の一部として取り込まれている
ライブラリ
		ソースコードの集合
		ある特定の機能を持ったコンピュータプログラムを他のプログラムから呼び出して利用できるように部品化し、
		そのようなプログラム部品を複数集めて一つのファイルに収納したもの
Bootstrap
		米ツイッター（Twitter）社が開発したオープンソースのWebアプリケーションフレームワーク
		既成の要素や雛形を使用して迅速にWebアプリケーションを開発することができる
		ページ全体を決まったサイズの小さな格子（グリッド）に分割し、
		これに沿って領域を分割したり要素を配置するグリッドデザインを採用している
Flyway
		オープンソースのデータベースマイグレーションツール
		Flyway を使うことで、データベースの状態をバージョン管理できるようになる	
Jackson
		モジュール分割とは、コンピュータプログラムを設計する際に、
		全体を何らかの基準に則って複数の部品（モジュール）に分割すること	
ジャクソン法→　プログラム全体を複数の部品（モジュール）に分割するための設計指針の一つで、
		入出力データの構造からプログラムの構造を決定していく方式　　　?????
		マイケル・ジャクソン（Michael A. Jackson）氏が1975年に発表した
jQuery
		Webブラウザ上で動作するJavaScriptライブラリの一つ
		ブラウザの種類に依らず簡潔な記述で豊富な機能を活用することができる 
		オープンソースとして公開・配布されている
Junit
		Java言語で開発されたプログラムの単体テスト（ユニットテスト）を行なうためのソフトウェア
		そこで用いられるテストコードの記述体系を含むテストフレームワーク
Log4j
		Apache log4jは、Javaのロギングユーティリティ
		Java言語でログをログファイルにロギングするため
Lombok
		Java特有の冗長なコードを簡潔にしてくれるオープンソースのライブラリ
		ライセンスはMITライセンスなので自由に利用することが出来ます
		Eclipseの自動生成機能の代わりにアノテーションを使うことで冗長なコードを簡潔にします
ORM
		Object-relational mapping(オブジェクト関係マッピング)
		データベースとオブジェクト指向プログラミング言語の間の非互換なデータを変換するプログラミング技法
		RDBにアクセスするプログラムを書く際の煩雑な処理を軽減させ、
		プログラマはSQLを意識することなくプログラムを書ける
■ 連絡ツール
ChatWork
		ビジネス利用に特化したマルチデバイスのコミュニケーションツール
		チャットだけでなく、タスクの作成・管理やファイル管理、ユーザー管理、ユーザーや端末に応じた機能制限など、
		業務効率化や情報漏洩リスクに対応する各種機能が揃っている点も特徴
Slack
		 Searchable Log of All Conversation and Knowledge
		ChatWork、Facebookのメッセンジャーのようにチーム内でコミュニケーションができるビジネスチャットのこと
IP Messenger
		白水啓章さんが作られた LAN 用メッセンジャーソフト
		同じネットワーク内のメンバーを自動認識し、
		簡単にクライアント同士がリアルタイムに情報交換できる優れたソフトウェア
■ Java
Javadoc
		Java言語のソースコードに一定の書式でコメントを記述することで、
		クラスの説明やメソッドの呼び出し方などの仕様をHTMLなどの文書形式でまとめてくれる仕組み
アノテーション(annotation)
		データやプログラムの中に特殊な記法を用いて埋め込まれた付加情報のこと
		ソースコード中に登場する要素（クラスやメソッドなど）に対して、
		処理系に伝達したい付加的な情報（メタデータ）を注記する仕組みのこと
メモリ管理
		コンピュータのメモリを管理するもの
		プログラム（プロセスなど）の要求に応じてメモリの一部を割り当てる方法と、
		そのメモリが不要となったときに再利用のために解放する方法を提供する
ヒープ
		データ構造の一種
		木構造（ツリー構造）のうち、親要素が子要素より常に大きい（あるいは小さい）という条件を満たすもの
		また、コンピュータプログラムが利用するメモリ領域の種類の一つ
		実行時に任意のタイミングで確保や解放が可能なものをヒープ領域(ヒープ)という
		ソフトウェアが自由に利用できるメモリ領域
		動的に確保と解放を繰り返せるメモリ領域のこと
GC（garbage collection）
		プログラムが動的に確保したメモリ領域のうち、不要になった領域を自動的に解放する機能
GoF
		Gang of Four
		書籍『オブジェクト指向における再利用のためのデザインパターン』の著者である、
		エーリヒ・ガンマ、リチャード・ヘルム、ラルフ・ジョンソン、ジョン・ブリシディースの4人を指す
		GoFによるデザインパターン（GoFパターン）は、多数のソフトウェアパターンの中で最も広く知られているものである
デザインパターン
		JavaやRubyなどのオブジェクト指向の言語で使われる設計パターンのこと
		過去のエンジニアが解決してきた方法（設計）が、デザインパターンとしてまとめられている
		最も有名なのはGoF（Gnag of Four）である
		「生成」や「構造」、「振る舞い」の3つに分類された、23のパターンがある
■ その他
オブジェクト指向
		コンピュータプログラムの設計や実装についての考え方の一つ
		互いに密接に関連するデータと手続き（処理手順）をオブジェクト（object）と呼ばれる一つのまとまりとして定義し、
		様々なオブジェクトを組み合わせて関連性や相互作用を記述していくことによりシステム全体を構築していく手法
バッチ処理
		あらかじめ登録した一連の処理を自動的に実行する処理方式
		複数のプログラムやファイル転送コマンドなどの実行順序を定義し、大量のデータを一括処理する。 
		処理の単位を「バッチ」と呼ぶ。
コンパイル
		プログラミング言語で書かれたコンピュータプログラム（ソースコード）を解析し、
		コンピュータが直接実行可能な形式のプログラム（オブジェクトコード）に変換すること
		そのためのソフトウェアをコンパイラ（compiler）という
カバレッジ
		所定の網羅条件がテストによってどれだけ実行されたかを割合で表したもの
		「カバレッジ」という表現は、プログラムのテストの話で、よく出てきます。
プラットホーム
		ある機器やソフトウェアを動作させるのに必要な、基盤となる装置やソフトウェア、サービス、
			あるいはそれらの組み合わせ（動作環境）のこと
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー

使い方、どういったものなのかを説明する　　　　　　　紐付けて覚える

JSPとは　　　　　JAVAのプログラムである。MVCのVIEWの部分であり、

サーブレット

JDBC

意味を覚えるだけじゃなくて、関連づけて、それは何というモノなのかを説明できるようにする